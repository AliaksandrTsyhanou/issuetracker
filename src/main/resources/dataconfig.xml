<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    	http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	
	
	
	
	 <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
<!-- 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 		<property name="prefix" value="/WEB-INF/views/" /> -->
<!-- 		<property name="suffix" value=".jsp" /> -->
<!-- 	</bean> -->
	
	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>
	
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<context:component-scan base-package="by.epam.lab.issuetracker" />
		 
	 





	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
<!-- 				<entry key="html" value="text/html" /> -->
			</map>
		</property>

		<property name="defaultViews">
			<list>				

				<!-- JAXB XML View -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="classesToBeBound">
								<list>
									<value>by.epam.lab.issuetracker.service.dto.BuildsDto</value>
							 		<value>by.epam.lab.issuetracker.entity.Build</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>				
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true" />

	</bean>
	
	
<!-- 	If no extension matched, use JSP view -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>




	<!--
        View resolver that delegates to other view resolvers based on the content type
    -->
<!--  <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> -->
<!--         <property name="contentNegotiationManager" ref="cnManager"/> -->

<!--         Define the view resolvers explicitly -->
<!--         <property name="viewResolvers"> -->
<!--             <list> -->
<!-- 		          JAXB XML View -->
<!-- 				  <bean class="org.springframework.web.servlet.view.xml.MarshallingView"> -->
<!-- 					<constructor-arg> -->
<!-- 						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> -->
<!-- 						   <property name="classesToBeBound"> -->
<!-- 							<list> -->
<!-- 							   <value>by.epam.lab.issuetracker.service.dto.BuildsDto</value> -->
<!-- 							   <value>by.epam.lab.issuetracker.entity.Build</value> -->
<!-- 							</list> -->
<!-- 						   </property> -->
<!-- 						</bean> -->
<!-- 					</constructor-arg> -->
<!-- 				  </bean> -->
              
<!--                 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--                     <property name="prefix" value="WEB-INF/views"/> -->
<!--                     <property name="suffix" value=".jsp"/> -->
<!--                 </bean> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->
    

   
<!--         Setup a simple strategy: -->
<!--            1. Only path extension is taken into account, Accept headers are ignored. -->
<!--            2. Return HTML by default when not sure. -->
<!--      --> 
<!-- 	<bean id="cnManager" -->
<!-- 		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> -->
<!-- 		<property name="ignoreAcceptHeader" value="true" /> -->
<!-- 		<property name="defaultContentType" value="text/html" /> -->

<!-- 		<property name="mediaTypes"> -->
<!-- 			<map> -->
<!-- 				<entry key="html" value="text/html" /> -->
<!-- 				<entry key="xml" value="application/xml" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	

	
	














	<tx:annotation-driven transaction-manager="transactionManager"/>
	


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>
    
    		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <bean id="SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="by.epam.lab.issuetracker.entity" />
        <property name="annotatedClasses">
 			<list>
   				<value>by.epam.lab.issuetracker.entity.Role</value>
<!--    				<value>by.epam.lab.issuetracker.entity.Status</value> -->
  			</list>
 		</property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>                
                <prop key="hibernate.show_sql">true</prop>
<!--                 <prop key="hibernate.enable_lazy_load_no_trans">true </prop> -->
<!--  				<prop key="javax.persistence.validation.mode">none</prop> -->
            </props> 
        </property>
        <property name="mappingResources">
       		<list>
               <value>/hibernate/User.hbm.xml</value>
        	</list>
        </property> 
    </bean>
  
  
  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="SessionFactory"/>
    </bean>
    
    
    
    <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

</beans>